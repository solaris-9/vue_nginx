import Vue from 'vue'
import {createRouter, createWebHistory} from 'vue-router'
/* import {
  createApp
} from 'vue';
const app = createApp({}); */
//app.use(Router)

/* Layout */
//import Layout from '@/layout'

/**
 * 修复添加grade角色，权限不起作用问题
 */
import permData from '@/utils/botton-perm-config.json'

/**
 * Note: sub-menu only appear when route children.length >= 1
 * Detail see: https://panjiachen.github.io/vue-element-admin-site/guide/essentials/router-and-nav.html
 *
 * hidden: true                   if set true, item will not show in the sidebar(default is false)
 * alwaysShow: true               if set true, will always show the root menu
 *                                if not set alwaysShow, when item has more than one children route,
 *                                it will becomes nested mode, otherwise not show the root menu
 * redirect: noRedirect           if set noRedirect will no redirect in the breadcrumb
 * name:'router-name'             the name is used by <keep-alive> (must set!!!)
 * meta : {
    roles: ['admin','editor']    control the page roles (you can set multiple roles)
    title: 'title'               the name show in sidebar and breadcrumb (recommend set)
    icon: 'svg-name'/'el-icon-x' the icon show in the sidebar
    breadcrumb: false            if set false, the item will hidden in breadcrumb(default is true)
    activeMenu: '/example/list'  if set path, the sidebar will highlight the path you set
  }
 */

/**
 * constantRoutes
 * a base page that does not have permission requirements
 * all roles can be accessed
 */
export const constantRoutes = [{
        path: '/login',
        component: () =>
            import ('@/views/login/index'),
        hidden: true
    },

    {
        path: '/404',
        component: () =>
            import ('@/views/404'),
        hidden: true,
        meta: { accesspass: true, roles: [], }
    },

    /*{
        path: '/',
        component: Layout,
        redirect: '/other/home',
        // children: [{
        //     path: 'dashboard',
        //     name: 'Dashboard',
        //     component: () =>
        //         import ('@/views/dashboard/index'),
        //     meta: { title: 'Dashboard', icon: 'dashboard' }
        // }]
    }*/

]

/*export const asyncRoutes = [{
        path: '/customer-info',
        component: Layout,
        name: 'CustomerInfo',
        meta: { title: 'Customer Info', icon: 'el-icon-info', roles: [] },
        children: [{
                path: 'network',
                name: 'Network',
                component: () =>
                    import ('@/views/customer-info/network/index'),
                meta: { title: 'Network', roles: permData['Network']['view'] }
            },
            {
                path: 'product',
                name: 'Product',
                component: () =>
                    import ('@/views/customer-info/product/index'),
                meta: { title: 'Product', roles: permData['Product']['view'] }
            },
            {
                path: 'financial',
                name: 'Financial',
                component: () =>
                    import ('@/views/customer-info/financial/index'),
                meta: { title: 'Financial', roles: permData['Financial']['view'] }
            },
            {
                path: 'contacts',
                name: 'Contacts',
                component: () =>
                    import ('@/views/customer-info/contacts/index'),
                meta: { title: 'Contacts', roles: permData['Contacts']['view'] }
            },
        ]
    },
    {
        path: '/my-view',
        component: Layout,
        name: 'MyView',
        meta: { roles: [] },
        children: [{
            path: 'index',
            name: 'Index',
            component: () =>
                import ('@/views/my-view/index'),
            meta: { title: 'My View', icon: 'el-icon-picture-outline', roles: permData['MyView']['view'] },
        }]
    },
    {
        path: '/system',
        component: Layout,
        name: 'System',
        meta: { title: 'System', icon: 'el-icon-s-platform', roles: [], accesspass: true },
        children: [{
            path: '/myaction',
            name: 'MyAction',
            component: () =>
                import ('@/views/system/myaction/myaction'),
            meta: { title: 'My Action', roles: permData['MyAction']['view'] }
        },
        ]
    },
    {
        path: '/customer-report',
        component: Layout,
        name: 'CustomerReport',
        meta: { title: 'Customer Report', icon: 'el-icon-notebook-2', redirect: '/customer-report/index', roles: [] },
        children: [{
            path: 'report',
            name: 'Report',
            component: () =>
                import ('@/views/customer-report/index'),
            meta: { title: 'Customer Report', roles: permData['CustomerReport']['view'] }
        }, {
            path: 'favorite',
            component: () =>
                import ('@/views/customer-report/components/my-favorite/index'),
            name: 'MyFavorite',
            meta: { title: 'My Favorite', roles: permData['CustomerReport']['view'] },
            hidden: true
        }, ]
    },
    {
        path: '/software-management',
        component: Layout,
        name: 'SoftwareManagement',
        meta: { title: 'SW Management', icon: 'el-icon-film', roles: [] },
        children: [{
                path: 'software-overview',
                name: 'SoftwareOverview',
                component: () =>
                    import ('@/views/software-management/software-overview/index'),
                meta: { title: 'SW Overview', roles: permData['SoftwareOverview']['view'] }
            },
            {
                path: 'manufactory',
                name: 'ManufactorySW',
                component: () =>
                    import ('@/views/software-management/manufactory/index'),
                meta: { title: 'Manufactory SW', roles: permData['ManufactorySW']['view'] }
            },
            {
                path: 'train-release',
                name: 'TrainReleaseSW',
                component: () =>
                    import ('@/views/software-management/trainrelease-software/index'),
                meta: { title: 'TrainRelease SW', roles: permData['TrainReleaseSW']['view'] }
            },
            {
                path: 'MainStreamOverview',
                name: 'MainStreamOverview',
                component: () =>
                    import ('@/views/MainStreamOverview/MainStreamOverview'),
                meta: { title: 'MainStream Overview', roles: permData['MainStreamOverview']['view'] }
            },
            {
                path: 'golden-info',
                name: 'GoldenInfo',
                component: () =>
                    import ('@/views/software-management/golden-info/index'),
                meta: { title: 'Golden Info', roles: permData['GoldenInfo']['view'] }
            }
        ]
    },
    {
        path: '/product-management',
        component: Layout,
        name: 'ProductManagement',
        meta: { title: 'Product Management', icon: 'el-icon-truck', roles: [] },
        children: [{
                path: 'product-status',
                name: 'ProductStatus',
                component: () =>
                    import ('@/views/product-management/product-status'),
                meta: { title: 'Product Status', roles: permData['ProductStatus']['view'] }
            },
            {
                path: 'nwcc-saas',
                name: 'ProductNWCCSaaS',
                component: () =>
                    import ('@/views/product-management/nwcc-saas/index'),
                meta: { title: 'NWCC SaaS', roles: permData['NWCCSaaS']['view'] }
            },
            {
                path: 'preconfigure-management',
                name: 'PreconfigureManagement',
                component: () =>
                    import ('@/views/product-management/preconfigure-management/index'),
                meta: { title: 'Preconfig Info', roles: permData['PreConfig']['view'] }
            },
            {
                path: 'Delta-Configure-Info',
                name: 'PreconfigureManagement',
                component: () =>
                    import ('@/views/product-management/Delta-Configure-Info/index'),
                meta: { title: 'Delta Configure Info', roles: permData['DeltaConfig']['view'] }
            },

        ]
    },
    {
        path: '/release-management',
        component: Layout,
        name: 'ReleaseManagement',
        meta: { title: 'Release Management', icon: 'guide', roles: [] },
        children: [{
                path: 'target-customer',
                name: 'TargetCustomer',
                component: () =>
                    import ('@/views/release-management/target-customer'),
                meta: { title: 'Target Customer', roles: permData['TargetCustomer']['view'] }
            },
            {
                path: 'target-device',
                name: 'TargetDevice',
                component: () =>
                    import ('@/views/release-management/target-device'),
                meta: { title: 'Target Device', roles: permData['TargetDevice']['view'] }
            },
            {
                path: 'end-to-end',
                name: 'EndToEnd',
                component: () =>
                    import ('@/views/release-management/end-to-end/index'),
                meta: { title: 'End To End', roles: permData['EndToEnd']['view'] }
            },
        ]
    },
    {
        path: '/maintenance-management',
        component: Layout,
        name: 'MaintenanceManage',
        meta: { title: 'Maintenance Manage', icon: 'el-icon-message', roles: [], showOneChilden: true },
        children: [{
            path: 'sales-force',
            name: 'SalesForce',
            component: () =>
                import ('@/views/maintenance-management/sales-force'),
            meta: { title: 'Sales Force', roles: permData['SalesForce']['view'] }
        }, ]
    },
    {
        path: '/admin',
        component: Layout,
        name: 'admin',
        meta: { title: 'Admin', icon: 'el-icon-user', roles: ["Administrator"] },
        children: [{
                path: 'user-management',
                name: 'UserManagement',
                component: () =>
                    import ('@/views/admin/user-management/index'),
                meta: { title: 'User Management', roles: permData['UserManagement']['view'] }
            }, {
                path: 'grade-management',
                name: 'GradeManagement',
                component: () =>
                    import ('@/views/admin/grade-management/index'),
                meta: { title: 'Grade Management', roles: permData['GradeManagement']['view'] }
            },
            // {
            //     path: 'supply-chain-SUM',
            //     name: 'SupplyChainSUM',
            //     component: () =>
            //         import ('@/views/admin/supply-chain-SUM/index'),
            //     meta: { title: 'Supply Chain SUM' }
            // }, {
            //     path: 'supply-chain',
            //     name: 'SupplyChain',
            //     component: () =>
            //         import ('@/views/admin/supply-chain/index'),
            //     meta: { title: 'Supply Chain' }
            // }
        ]
    },
    // {
    //     path: '/system',
    //     component: Layout,
    //     name: 'System',
    //     meta: { title: 'System', icon: 'el-icon-s-platform', roles: [], accesspass: true, showOneChilden: true },
    //     children: [{
    //         path: 'message',
    //         name: 'Message',
    //         component: () =>
    //             import ('@/views/system/message/index'),
    //         meta: { title: 'My Action', roles: [], accesspass: true }
    //     }, 
    //     {
    //         path: '/myaction',
    //         name: 'MyAction',
    //         component: () =>
    //             import ('@/views/system/myaction/index'),
    //         meta: { title: 'My Action2', roles: [], accesspass: true }
    //     },
    //     ]
    // },
    {
        path: '/other',
        component: Layout,
        name: 'Other',
        meta: { title: 'Other', roles: [], accesspass: true },
        hidden: true,
        children: [{
            path: 'home',
            name: 'Home',
            component: () =>
                import ('@/views/other/home/index'),
            meta: { title: 'Home', roles: permData['home']['view'], accesspass: true }
        }, ]
    },
    // 404 page must be placed at the end !!!
    { path: '*', redirect: '/404', hidden: true, meta: { accesspass: true }, roles: [] }
]
*/

/**
 * 独立系统的单页面，根据人名赋予权限，过程看 @/src/permissions.js
 */
/*export const sigleRoutes = [{
    path: '/sigle',
    component: () =>
        import ('@/views/admin/user-management/index'),
    hidden: true
},]*/
/* const createRouter = () => new Router({
    // mode: 'history', // require service support
    scrollBehavior: () => ({ y: 0 }),
    routes: constantRoutes
}) */
const router = createRouter({
    scrollBehavior: () => ({ y: 0 }),
    history: createWebHistory(),
    routes: constantRoutes
})

export const awaitRoutes = constantRoutes

// Detail see: https://github.com/vuejs/vue-router/issues/1234#issuecomment-357941465
export function resetRouter() {
    const newRouter = createRouter()
    router.matcher = newRouter.matcher // reset router
}

export default router
